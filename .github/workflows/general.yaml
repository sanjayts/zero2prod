name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.1
  SQLX_FEATURES: postgres,native-tls
  # We need a duplicated comma removed variant because Github actions doesn't allow comma
  # as part of its cache key as of 27th Aug 2022. If this changes, feel free to delete
  # and replace its occurrences with the original variant.
  SQLX_FEATURES_COMMA_REMOVED: postgres_native-tls
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: postgres

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache sqlx CLI
        id: cache-sqlx-cli
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES_COMMA_REMOVED }}

      - name: Install sqlx CLI
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.cli.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Cache sqlx CLI
        id: cache-sqlx-cli
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES_COMMA_REMOVED }}

      - name: Install sqlx CLI
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.cli.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache sqlx CLI
        id: cache-sqlx-cli
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES_COMMA_REMOVED }}

      - name: Install sqlx CLI
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.cli.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--ignore-tests --avoid-cfg-tarpaulin'
